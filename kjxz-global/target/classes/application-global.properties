#\u65E5\u5FD7
logging.config=classpath:logback-spring.xml
#\u90AE\u7BB1
spring.mail.host=smtp.163.com
spring.mail.username=cw741342811@163.com
spring.mail.password=cw741342811
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true  
spring.mail.nickname=\u65FA\u54E5

#============== kafka ===================
# \u6307\u5B9Akafka \u4EE3\u7406\u5730\u5740\uFF0C\u53EF\u4EE5\u591A\u4E2A,\u8FD9\u91CC\u7684192.168.0.1\u662F\u4E0A\u9762Kafka \u542F\u52A8\u914D\u7F6E\u6587\u4EF6\u4E2D\u5BF9\u5E94\u7684
# \u6CE8\uFF1A\u7F51\u4E0A\u4E00\u4E9B\u5E16\u5B50\u4E2D\u8BF4 Kafka \u8FD9\u91CC\u7684\u914D\u7F6E\u53EA\u80FD\u662F\u4E3B\u673A\u540D\uFF0C\u4E0D\u652F\u6301 ip\uFF0C\u6CA1\u6709\u9A8C\u8BC1\u8FC7\uFF0C
# \u5982\u679C\u60A8\u5728\u9A8C\u8BC1\u65F6\u51FA\u73B0\u95EE\u9898\uFF0C\u53EF\u4EE5\u5C1D\u8BD5\u672C\u673A\u7ED1\u5B9A\u4E0B host
spring.kafka.bootstrap-servers=47.95.114.106:9092
#=============== provider  =======================
spring.kafka.listener.missing-topics-fatal=false
#\u91CD\u8BD5\u673A\u5236
spring.kafka.producer.retries=0
# \u6BCF\u6B21\u6279\u91CF\u53D1\u9001\u6D88\u606F\u7684\u6570\u91CF
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#=============== consumer  =======================
# \u6307\u5B9A\u9ED8\u8BA4\u6D88\u8D39\u8005group id
spring.kafka.consumer.group-id=test-consumer-group
#\u4F4D\u79FB
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100ms
# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09redis\u4E00\u5171\u670916\u4E2A\u5E93 \u8FD9\u513F\u4F7F\u75280\u53F7\u5E93
#spring.redis.database=0
# Redis\u670D\u52A1\u5668\u5730\u5740 \u5199\u4F60\u7684ip
#spring.redis.host=106.13.205.28
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
#spring.redis.port=6379
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
#spring.redis.password=
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236  \u7C7B\u4F3C\u4E8Emysql\u7684\u8FDE\u63A5\u6C60
spring.redis.jedis.pool.max-active=200
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09 \u8868\u793A\u8FDE\u63A5\u6C60\u7684\u94FE\u63A5\u62FF\u5B8C\u4E86 \u73B0\u5728\u53BB\u7533\u8BF7\u9700\u8981\u7B49\u5F85\u7684\u65F6\u95F4
spring.redis.jedis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.max-idle=10
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.min-idle=0
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09 \u53BB\u94FE\u63A5redis\u670D\u52A1\u7AEF
spring.redis.timeout=6000

#\u914D\u7F6E\u540D\u79F0 \u5728linux\u914D\u7F6E\u7684mymaster
#spring.redis.sentinel.master=mymaster
#spring.redis.sentinel.nodes=106.13.205.28:26379,106.13.205.28:26380,106.13.205.28:26381

##\u96C6\u7FA4\u8282\u70B9
spring.redis.cluster.nodes=47.95.114.106:8000,47.95.114.106:8001,47.95.114.106:8002,47.95.114.106:8003,47.95.114.106:8004,47.95.114.106:8005
spring.redis.cluster.timeout=5000
##\u521A\u624D\u6F14\u793A\u7684 \u5982\u679C\u67D0\u4E2Akey \u4E0D\u5728\u8BE5\u8282\u70B9\u5C31\u4ECE\u5B9A\u5411
spring.redis.cluster.max-redirects=3 
